document.addEventListener("DOMContentLoaded", function() {
    const groupId = 51; // ID –≥—Ä—É–ø–ø—ã
    const currWeekEl = document.getElementById("CurrWeek");
    const nextWeekEl = document.getElementById("NextWeek");

    // üîπ Overrides: –∫–ª—é—á ‚Üí –∑–Ω–∞—á–µ–Ω–∏–µ
    // –ï—Å–ª–∏ –∑–Ω–∞—á–µ–Ω–∏–µ —Å–æ–¥–µ—Ä–∂–∏—Ç HTML, –æ–Ω–æ –≤—Å—Ç–∞–≤–ª—è–µ—Ç—Å—è —á–µ—Ä–µ–∑ innerHTML
    // –î–ª—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∑–∞–º–µ–Ω –∏—Å–ø–æ–ª—å–∑—É–µ–º —Ç–æ–ª—å–∫–æ —Ç–µ–∫—Å—Ç
    const overrides = {
		
        // "–ù–ò–†–°": "–§–∏–∑–∏–∫–∞ <br><i style='color:green;'>–ª–∞–±. —Ä–∞–±–æ—Ç–∞</i>",
		// "": "",
		"–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–∏–æ—Ö–∏–º–∏—è ": "<a href='https://jumpshare.com/share/37mbNQRsPscLlPmKkj1A'>–ö–ª–∏–Ω–∏—á–µ—Å–∫–∞—è –±–∏–æ—Ö–∏–º–∏—è</a>",
		"(–ø–∞—Ç.—Ñ–∏–∑.)": "",
		"(–ª—É—á.–¥.)": "",
		"(–ø–∞—Ç.–∞–Ω–∞—Ç.)": "",
        "–õ—É—á–µ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞": "<a href='https://chatgpt.com/share/68d51f67-d684-800b-ae86-b0d2f639597c'>–õ—É—á–µ–≤–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞</a>",
        "–ë–æ–ª—å—à–æ–π –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á.–ª–µ–∫—Ü.–∑–∞–ª": "–ë–ú–ó",
		"311 (—Ñ–∞–∫.—Ç–µ—Ä.)": "",
		"–£—á–µ–±–Ω–∞—è –∞—É–¥.-": "–ö–∞–±–∏–Ω–µ—Ç ‚Ññ",
		"–†–î–õ–¶ –ø—Ä–∏ –ö–ì–ú–ê, 3 —ç—Ç–∞–∂, –£—á–µ–±–Ω—ã–π –∫–∞–±.- ": "–ú–µ–¥—Ü–µ–Ω—Ç—Ä –ö–ì–ú–ê (–ø–æ –¢—ã–Ω—ã—Å—Ç–∞–Ω–æ–≤–∞), 401 –∫–∞–±–∏–Ω–µ—Ç",
        "–∫–ª–∏–Ω.–ê—Ö—É–Ω–±–∞–µ–≤–∞, 2 —ç—Ç–∞–∂, –õ–µ–∫—Ü.–∑–∞–ª-–ë–•–ó (–ø—Ä–æ–ø.—Ö–∏—Ä.)": "–ù–∞—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–π –≥–æ—Å–ø–∏—Ç–∞–ª—å (–¢–æ–≥–æ–ª–æ–∫ –ú–æ–ª–¥–æ 1/13)",
        "–ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π (—Ñ–∞–∫.—Ç–µ—Ä)": "–ü—Ä–æ–ø–µ–¥–µ–≤—Ç–∏–∫–∞ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–∏—Ö –±–æ–ª–µ–∑–Ω–µ–π"
		// "–ë–æ–ª—å—à–æ–π –º–æ—Ä—Ñ–æ–ª–æ–≥–∏—á.–ª–µ–∫—Ü.–∑–∞–ª": "–ë–ú–ó"
    };

    // –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø–æ–Ω–µ–¥–µ–ª—å–Ω–∏–∫ –Ω–µ–¥–µ–ª–∏
    function getMonday(d) {
        d = new Date(d);
        const day = d.getDay();
        const diff = d.getDate() - day + (day === 0 ? -6 : 1);
        return new Date(d.setDate(diff));
    }

    function formatDate(d) {
        let month = d.getMonth() + 1;
        let day = d.getDate();
        return `${d.getFullYear()}-${month < 10 ? "0"+month : month}-${day < 10 ? "0"+day : day}`;
    }

    function capitalizeFirst(str) {
        return str.charAt(0).toUpperCase() + str.slice(1);
    }

    function formatWeekRange(startDate) {
        const options = { day: "numeric", month: "long" };
        const endDate = new Date(startDate);
        endDate.setDate(startDate.getDate() + 6);
        return `–†–∞—Å–ø–∏—Å–∞–Ω–∏–µ —Å ${startDate.toLocaleDateString("ru-RU", options)} –ø–æ ${endDate.toLocaleDateString("ru-RU", options)}`;
    }

    // –ì–ª–æ–±–∞–ª—å–Ω—ã–µ —Ç–µ–∫—Å—Ç–æ–≤—ã–µ –∑–∞–º–µ–Ω—ã
    function applyGlobalOverrides(container, overrides) {
        const walker = document.createTreeWalker(container, NodeFilter.SHOW_TEXT, null, false);
        let node;
        while(node = walker.nextNode()) {
            for(const key in overrides){
                if(!overrides[key].includes('<')) { // —Ç–æ–ª—å–∫–æ –¥–ª—è —Ç–µ–∫—Å—Ç–æ–≤—ã—Ö –∑–∞–º–µ–Ω
                    function escapeRegExp(string) {
						return string.replace(/[.*+?^${}()|[\]\\]/g, "\\$&");
					}

					const safeKey = escapeRegExp(key);
					const regex = new RegExp(safeKey, "g");
					node.nodeValue = node.nodeValue.replace(regex, overrides[key]);

                }
            }
        }
    }

    // –ü–æ–¥–≥—Ä—É–∂–∞–µ–º —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ –Ω–µ–¥–µ–ª–∏
    function loadWeek(monday, container, weekSpanId) {
        const url = `https://ksma-schedule.itismynickname9.workers.dev/proxy/${groupId}/${formatDate(monday)}/get`;

        fetch(url)
            .then(res => res.json())
            .then(data => {
                const weekSpan = document.getElementById(weekSpanId);
                if(weekSpan) {
                    weekSpan.textContent = formatWeekRange(monday);
                }

                container.innerHTML = "";
                const scheduleTable = document.createElement("ul");
                scheduleTable.className = "schedule__table";

                for(const dayKey in data){
                    const day = data[dayKey];
                    const liDay = document.createElement("li");
                    liDay.className = "schedule__day";

                    const dateSpan = document.createElement("span");
                    dateSpan.className = "schedule__date";
                    const dateObj = new Date(day.d);
                    const options = { weekday: "long", day: "numeric", month: "long" };
                    dateSpan.textContent = capitalizeFirst(dateObj.toLocaleDateString("ru-RU", options));
                    liDay.appendChild(dateSpan);

                    const lessonsUl = document.createElement("ul");
                    lessonsUl.className = "schedule__lessons";

                    for(const lessonKey in day.l){
                        const lesson = day.l[lessonKey];
                        const lessonLi = document.createElement("li");
                        lessonLi.className = "lesson";

                        const timeDiv = document.createElement("div");
                        timeDiv.className = "lesson__time";
                        timeDiv.textContent = lesson.tm;
                        lessonLi.appendChild(timeDiv);

                        const paramsDiv = document.createElement("div");
                        paramsDiv.className = "lesson__params";

                        const nameSpan = document.createElement("span");
                        nameSpan.className = "lesson__name";
                        // –ï—Å–ª–∏ –≤ overrides –µ—Å—Ç—å HTML, –≤—Å—Ç–∞–≤–ª—è–µ–º —á–µ—Ä–µ–∑ innerHTML
                        if(overrides[lesson.d]) {
                            nameSpan.innerHTML = overrides[lesson.d];
                        } else {
                            nameSpan.textContent = lesson.d;
                        }
                        paramsDiv.appendChild(nameSpan);

                        const typeSpan = document.createElement("span");
                        typeSpan.className = "lesson__type";
                        typeSpan.textContent = lesson.t;
                        paramsDiv.appendChild(typeSpan);

                        if(lesson.r){
                            const placeSpan = document.createElement("span");
                            placeSpan.className = "lesson__place";
                            placeSpan.innerHTML = `<i class="icon-marker"></i>${lesson.r}`;
                            paramsDiv.appendChild(placeSpan);
                        }

                        lessonLi.appendChild(paramsDiv);
                        lessonsUl.appendChild(lessonLi);
                    }

                    liDay.appendChild(lessonsUl);
                    scheduleTable.appendChild(liDay);
                }

                container.appendChild(scheduleTable);

                // –¢–∞–π–º–∞—É—Ç –¥–ª—è –≥–ª–æ–±–∞–ª—å–Ω—ã—Ö –∑–∞–º–µ–Ω, —á—Ç–æ–±—ã –∫–∞—Ä—Ç–∏–Ω–∫–∏ —É—Å–ø–µ–ª–∏ –ø—Ä–æ–≥—Ä—É–∑–∏—Ç—å—Å—è
                setTimeout(() => applyGlobalOverrides(container, overrides), 300);
            })
            .catch(err => {
                container.innerHTML = "<p style='color:red; text-align:center;'>–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å —Ä–∞—Å–ø–∏—Å–∞–Ω–∏–µ</p>";
                console.error(err);
            });
    }

    const monday = getMonday(new Date());
    const nextMonday = new Date(monday);
    nextMonday.setDate(nextMonday.getDate() + 7);

    // –°—Ä–∞–∑—É –∑–∞–≥—Ä—É–∂–∞–µ–º –æ–±–µ –Ω–µ–¥–µ–ª–∏
    loadWeek(monday, currWeekEl, "week");
    loadWeek(nextMonday, nextWeekEl, "week-next");
    nextWeekEl.style.display = "none";

    // –ü–µ—Ä–µ–∫–ª—é—á–µ–Ω–∏–µ –Ω–µ–¥–µ–ª—å
    document.getElementById("cur").onclick = () => {
        currWeekEl.style.display = "block";
        nextWeekEl.style.display = "none";
    };
    document.getElementById("next").onclick = () => {
        currWeekEl.style.display = "none";
        nextWeekEl.style.display = "block";
    };
});



